import base64
import io

import pandas as pd
import plotly.express as px
import requests
import streamlit as st
from PIL import Image

import main


def decode_img(image_bytes):
    return Image.open(io.BytesIO(base64.decodebytes(bytes(image_bytes, "utf-8"))))


from st_pages import Page, show_pages

show_pages(
    [
        Page("main.py", "–ì–ª–∞–≤–Ω–∞—è", "üè†"),
        Page("pages/photo2place.py", "–ü–æ–∏—Å–∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", "üñºÔ∏è"),
        Page("pages/text2place.py", "–ü–æ–∏—Å–∫ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç—É", icon="üîé"),
        Page("pages/navigation.py", "–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞", icon="üåé")
    ]
)

st.markdown('# –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É')
prompt = st.text_input('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: ')
if prompt:
    data = requests.post("http://158.160.138.228:8000/api/v1/classify-text", json={"text": prompt},
                         params={"city": open('city', 'r').read()}).json()
    data = pd.DataFrame.from_dict(data)
    data['longitude'] = data['coordinates'].apply(lambda x: x['longitude'])
    data['latitude'] = data['coordinates'].apply(lambda x: x['latitude'])
    data['images'] = data['xid'].apply(lambda xid: f"https://storage.yandexcloud.net/misis-progrev-gradientov/{xid}.jpg")

    data.drop('coordinates', axis=1, inplace=True)

    st.markdown('### –î–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –æ–¥–Ω–æ–π –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:')
    cats = data.groupby(by='category')['probability'].sum()
    cats = pd.DataFrame(cats).reset_index()
    cats.columns = ['category', 'probability']
    cats['category'] = cats['category'].replace(main.TRANSLATION)

    fig = px.pie(cats, names='category', values='probability',
                 width=400, height=400)
    st.plotly_chart(fig)

    highest = data.iloc[data['probability'].idxmax()]['name']
    st.markdown(f"### –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —ç—Ç–æ {highest}, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:")

    df_for_table = data[['xid', 'images', 'name', 'probability']]
    df_for_table.insert(0, "Select", False)
    table = st.data_editor(
        df_for_table,
        column_config={
            "name": st.column_config.SelectboxColumn(
                "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
                width="medium",
                required=True,
                options=data['name'].unique()
            ),
            "images": st.column_config.ImageColumn(
                "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è"
            ),
            "probability": st.column_config.ProgressColumn(
                "–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏",
                format="%.3f",
                min_value=0,
                max_value=1,
            ),
            "Select": st.column_config.CheckboxColumn(required=True)
        },
        hide_index=True,
    )

    fig = px.scatter_mapbox(data,
                            lat='latitude',
                            lon='longitude',
                            size='probability',
                            zoom=10,
                            hover_name='name',
                            color='category')
    fig.update_layout(mapbox_style="open-street-map", height=800)
    st.plotly_chart(fig, use_container_width=True, height=800)

    main.PLACES_TO_VISIT.update(set(table[table['Select'] == True]['xid']))
